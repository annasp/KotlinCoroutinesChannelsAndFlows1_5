import kotlinx.coroutines.runBlocking

fun main(args: Array<String>) {
    runBlocking {
//    course2SimpleChannel()
//    course2SimpleFlow()
//    course3SimpleUseOfChannels()
//    course3ProducerConsumer()
//    course3Pipelining()
//    course3BufferedChannels()
//    course3LoadBalancing()
//    course4SimpleSelect()
//    course4SClosedChannels()
//    course4SelectOnSend()
//    course4TimeOut()
//        course5SimpleFlow()
//        course5MultipleConsumers()
//        course6Mapping()
//        course6Filtering()
//        course6Transform()
//        course6SizeLimiting()
//        course6Reduce()
//        course6TerminatingReduce()
//        course6Debounce()
//        course6FlowContext()
//        course7Buffering()
//        course7Conflation()
//        course7CollectingLatest()
//        course7ZippingFlows()
//        course7CombiningFlows()
//        course7FlatteningFlows()
//        course8SharedFlow()
//        course8MutableSharedFlow()
//        course8StateFlow()

//        course9catchAndFinally()
//        course9Transparency()
//        course9CatchOperator()
        course9TransparentCompletion()
    }
}
